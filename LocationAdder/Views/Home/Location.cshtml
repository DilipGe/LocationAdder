
@model LocationAdder.Models.Locations
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>    
    <meta name="viewport" content="width=device-width" />
    <title>Location</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC-8F1Ta9lTJDYAARktKUNhpIP8Fr8vfmw&libraries=places"></script>
    @*<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC5c7RVG5abNguKbkJbKobTKhOu_pEtk4s&libraries=places"></script>*@
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <script src="~/scripts/jquery-3.3.1.min.js"></script>
    <script src="~/scripts/bootstrap.min.js"></script>
    <script src="~/scripts/jquery.validate.min.js"></script>
    <script src="~/scripts/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript">
            var markers = @Html.Raw(ViewBag.Markers);
            window.onload = function () {
                var mapOptions = {
                    center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
                    //zoom: 7, //No need to set the zoom if we set the bounds
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };
                var infoWindow = new google.maps.InfoWindow();
                var map = new google.maps.Map(document.getElementById("dvMap"), mapOptions);
                
                //For Centering the map based on markers
                var latlngbounds = new google.maps.LatLngBounds();

                for (i = 0; i < markers.length; i++) {
                    var data = markers[i]
                    var myLatlng = new google.maps.LatLng(data.lat, data.lng);
                    var marker = new google.maps.Marker({
                        position: myLatlng,
                        map: map,
                        title: data.title
                    });
                    (function (marker, data) {
                        google.maps.event.addListener(marker, "click", function (e) {
                            infoWindow.setContent(data.description);
                            infoWindow.open(map, marker);
                        });
                    })(marker, data);

                    //Extend each marker's position in LatLngBounds object.
                    latlngbounds.extend(marker.position);
                }

                //Get the boundaries of the Map.
                var bounds = new google.maps.LatLngBounds();

                //Center map and adjust Zoom based on the position of all markers.
                map.setCenter(latlngbounds.getCenter());
                map.fitBounds(latlngbounds);

                //Auto Complete
                var input = document.getElementById('searchTextField');
                new google.maps.places.Autocomplete(input);

                //For getting clicked location information
                var geocoder = new google.maps.Geocoder();
                google.maps.event.addListener(map, "click", function(event) {
                    infoWindow.close();
                    //placeMarker(map, event.latLng);
                    geocoder.geocode({
                        'latLng': event.latLng
                    }, function(results, status) {
                        if (status == google.maps.GeocoderStatus.OK) {                            
                            if (results[0]) {
                                $( "#searchTextField1" ).val(results[0].formatted_address);
                                $( "#latitude" ).val(event.latLng.lat());
                                $( "#longitude" ).val(event.latLng.lng());
                                $( "#AddNewLocation" ).click();
                            }
                        }
                    });
                });
                //function placeMarker(map, location) {
                //    var marker = new google.maps.Marker({
                //        position: location,
                //        map: map
                //    });
                //}
            }

            function PopulateLatLong()
            {
                var geocoder = new google.maps.Geocoder();
                var address = $( "#searchTextField" ).val();
                //alert(address);
                geocoder.geocode({
                    'address': address
                }, function(results, status) {
                    //alert(status);
                    if (status == google.maps.GeocoderStatus.OK) {                            
                        if (results[0]) {
                            $( "#latitude" ).val(results[0].geometry.location.lat());
                            $( "#longitude" ).val(results[0].geometry.location.lng());
                            $( "#AddNewLocation" ).click();
                        }
                    }
                });
                ///alert("Populate");
            }

            //function initialize() {
            //    var input = document.getElementById('searchTextField');
            //    new google.maps.places.Autocomplete(input);
            //}

        //google.maps.event.addDomListener(window, 'load', initialize);

        
    </script>

</head>
<body>
    
    @using (Html.BeginForm("Location", "Home", FormMethod.Post))
    {
        <div>
            <input id="searchTextField" type="text" size="50" >
        </div>
        <div class="container py-4">
            <h5 class="text-center">HOW TO CREATE GOOGLE MAP AND ADD LOCATION DYNAMICALLY USING ASP.NET MVC 5</h5>
            <div class="card">
                <div class="card-header bg-danger">
                    <h6 class="card-title text-uppercase text-white">Google Map Location</h6>
                </div>
                <div class="card-body">
                    <button id="AddNewLocation" style="margin-bottom:10px;" type="button" data-target="#myMap" data-toggle="modal" class="btn btn-danger btn-sm rounded-0"><i class="fa fa-plus-circle"></i> Add New Location</button>

                    <div class="modal fade" id="myMap">                        
                        <div class="modal-dialog modal-lg">                            
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title">Add New Location</h4>
                                    <button type="button" class="close" data-dismiss="modal">×</button>
                                </div>
                                @*<div>
                                    <input id="searchTextField" type="text" size="50">
                                </div>*@
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-sm-4 col-md-4 col-xs-12">
                                            <div class="form-group">
                                                <label>Address:</label>                                                
                                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @id="searchTextField1", @onclick = "PopulateLatLong();" } })
                                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-xs-12">
                                            <div class="form-group">
                                                <label>Latitude:</label>
                                                @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control", @id = "latitude" } })
                                                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-xs-12">
                                            <div class="form-group">
                                                <label>Longitude:</label>
                                                @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control", @id = "longitude" } })
                                                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12 col-md-12 col-xs-12">
                                            <div class="form-group">
                                                <label>Description:</label>
                                                <textarea name="Description" rows="5" class="form-control"></textarea>
                                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-danger rounded-0" data-dismiss="modal">Close</button>
                                    <button class="btn btn-primary rounded-0">Submit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="dvMap" class="card" style="width: 100%; height: 400px">
                    </div>
                </div>
            </div>
        </div>
    }
</body>
 
</html>
